Numpy入门（一定要使用Jupyter notebook,方便查看输入输出）
目标：掌握numpy中操作数组的方法
优点：numpy中操作数组将比list更快更省

ndarray
1. 生成一个随机ndarray
	np.random.randn(a,b)
	ndarray类似于R中的数据，都以向量形式运算
	array + array
	array * n
	np.random.randn(a,b)生成随机正态分布的数据符合矩阵形式
2. 查看数组属性
	array.shape (行，列)
	array.dtyoe => 显示数据类型
	array.ndim => 显示数据行数
3. 生成ndaaray
	np.array()接受任意序列型对象，生成ndarray, 数据类型会被自动推断
	np.zeros((a,b)) 全零数组，ones全1数组，empty空值数组（unsafe），（a,b）可以是高维的
	====================================
	函数名		描述
	array		如上
	asarray		功能类似array
	arange		类似于原有的range函数
	eye,identity	生成n*n的特征矩阵
	====================================
4. ndarray的数据类型
	np.array(list,dtype = np.float64)
	array.astype(np.complex64)
	浮点数 => 整数，直接抹除后面的小数
	将字符串数组转换为数组
		np.array(['1.25','1.34','-9.8'],dtype=np.string_).astype(float)
	astype(array.dtype)改成同类型的数据
	astype('u4')使用类型代码也能完成转换
	astype总是创造一个新的数组
5. 数组算术
	都是以矩阵运算为基础，进行数组间比较大小时，会返回布尔值数组
6. 数组切片
	与列表不同，数组的切片不是重新复制一个，而是在原数据上修改
	复制数组 array[a:b].copy()
	其他操作与列表相同
	二维数组可以用array[a,b]找到对应元素
	高维数组的切片[q:w,e:r...]
	对切片赋值会改变切片中所有值
7. 布尔值数组，需要长度对应
	在数组索引中可以进行布尔表达式运算 data[data<0] = 0
	data[names != 'joe'] = 1
	更合理的处理方法是利用pandas
	
8.神奇索引
	索引可以是一个列表，返回矩阵中的特定行
	二维神奇索引 array[[1,2,3],[4,5,6]]返回矩阵中(1,4)(2,5)(3,6)位元素
9.数组转置和换轴
	array.T
	array.transpose 可置换高维矩阵
	np.dot(arr1,arr2)矩阵点积
10.
	np.exp(arr)
	np.sqrt(arr)
	np.maximum(arr1,arr2)逐个计算两数组中最大值并返回
	np.add()
	remainder,whole_part = np.modf(arr)分别返回数组的小数和整数部分
	诸多计算函数都可查询

11. 线性代数运算
	=================================
	np.linalg
		diag	返回对角元素
		dot	点乘
		trace	求对角元素之和（迹）
		det
		eig	求特征值和特征向量
		inv	求逆
		qr	QR分解
		svd	奇异值分解
		solve	
		lstsq	Ax = b 的最小二乘解
	=================================
12. 数组数学统计方法
	==================================
	sum		
	mean
	std,var		可选择自由度，默认为n
	min,max
	argmin,argmax	最大值和最小值的位置
	cumsum		从0开始元素累积和
	cumprod		从1开始元素累积和
	==================================
	sum 和 mean等函数可以接受参数axis选择不同的轴进行计算
13. 布尔值数组方法
	(arr>0).sum() 计算正值个数
	arr.any()是否有一个true
	arr.all()是否全为true
14. 其他方法
	arr.sort()返回一个数组排序的拷贝，可传递轴的参数
	np.unique()计算数组的唯一值并排序后返回
	np.in1d(x,y)计算x的元素是否在y中，返回布尔数组
	np.intersect1d()交集
	np.union1d()并集

		
	
	

	
	
